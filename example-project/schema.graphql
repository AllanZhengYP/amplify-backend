schema {
  query: Query
  mutation: Mutation
}

type Mutation {
  addDemo(input: DemoInput!): demo
  updateDemo(input: DemoInput!): demo2
}

type Query {
  getDemos: [demo!]
  getOtherDemos: [demo2!]
}

type demo {
  aNewField: String!
  id: String!
  somethingElse: String!
  newField: String!
  moreFields: String!
  watchingThisTime: String!
  version: String!
}

type demo2 {
  id: String!
  a: String!
  bunch: String!
  of: String!
  fields: String
}

type demo3 {
  aNewField: String!
  id: String!
  somethingElse: String!
  newField: String!
  moreFields: String!
  watchingThisTime: String!
  version: String!
}

type demo4 {
  aNewField: String!
  id: String!
  somethingElse: String!
  newField: String!
  moreFields: String!
  watchingThisTime: String!
  version: String!
}

type demo5 {
  aNewField: String!
  id: String!
  somethingElse: String!
  newField: String!
  moreFields: String!
  watchingThisTime: String!
  version: String!
}
type demo6 {
  aNewField: String!
  id: String!
  somethingElse: String!
  newField: String!
  moreFields: String!
  watchingThisTime: String!
  version: String!
}
type demo7 {
  aNewField: String!
  id: String!
  somethingElse: String!
  newField: String!
  moreFields: String!
  watchingThisTime: String!
  version: String!
}
type demo8 {
  aNewField: String!
  id: String!
  somethingElse: String!
  newField: String!
  moreFields: String!
  watchingThisTime: String!
  version: String!
}
type demo9 {
  aNewField: String!
  id: String!
  somethingElse: String!
  newField: String!
  moreFields: String!
  watchingThisTime: String!
  version: String!
}
type demo10 {
  aNewField: String!
  id: String!
  somethingElse: String!
  newField: String!
  moreFields: String!
  watchingThisTime: String!
  version: String!
}
type demo11 {
  aNewField: String!
  id: String!
  somethingElse: String!
  newField: String!
  moreFields: String!
  watchingThisTime: String!
  version: String!
}
type demo12 {
  aNewField: String!
  id: String!
  somethingElse: String!
  newField: String!
  moreFields: String!
  watchingThisTime: String!
  version: String!
}

input DemoInput {
  version: String!
}
